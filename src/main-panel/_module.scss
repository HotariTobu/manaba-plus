@use '../base';

%actions {
  @include base.flex-box(column);

  div {
    width: 16px;
    height: 16px;
  }

  .remove {
    background-image: url('../img/icon-remove.png');
    filter: saturate(0%);

    &:hover {
      filter: saturate(1000%);
    }
  }
}

%removed {
  opacity: 0.3;
}

.fixed-table {
  table-layout: fixed;
}

.assignment {
  &.defcon-4 {
    background-color: #ffe6e9;
  }

  &.defcon-3 {
    background-color: #fff4d1;
  }

  &.defcon-2 {
    background-color: #cce8cc;
  }

  &.defcon-1 {
    background-color: #f8f8f8;
  }

  &:hover {
    background-color: transparent;
  }

  &[removed] {
    @extend %removed;
  }

  a {
    @extend %omitted-text;
  }

  .course-name {
    display: flex;
  }

  .title {
    @include base.grid-box(minmax(0, 1fr) auto);
  }

  .actions {
    @extend %actions;
  }

  .remaining-time {
    &.day-count {
      &::after {
        content: '日';
      }
    }

    &.time {
      font-weight: bold;
    }
  }
}

.error {
  background-color: base.$error-color;
}

#manaba-plus-container {
  .buttons-container {
    @include base.flex-box;
  }
}

#messages-holder {
  margin: 10px;
}

#assignment-list-container {
  .bar {
    @include base.flex-box;
  }

  table {
    min-width: 500px;
    width: 100%;
    border-collapse: collapse;

    th {
      &:nth-of-type(3) {
        width: 100px;
      }

      &:nth-of-type(4) {
        width: 70px;
      }
    }

    td {
      padding: base.$gap;

      &:nth-of-type(3),
      &:nth-of-type(4) {
        text-align: center;
      }
    }
  }
}

#assignment-list-holder {
  &:not(:has(> :not([style*='display: none']))) {
    &::after {
      content: 'ないヨ。_(:3 」∠ )_';
    }
  }
}
